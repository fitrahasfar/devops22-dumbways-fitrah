---
- name: Install Snapd untuk Certbot
  apt:
    name: snapd
    state: present
    update_cache: yes

- name: Pastikan Snapd telah berjalan
  service:
    name: snapd
    state: started
    enabled: yes

- name: Hapus Certbot jika sudah terinstall sebelumnya (Opsional)
  shell: snap remove certbot || true
  ignore_errors: yes

- name: Install Certbot melalui Snap
  shell: snap install --classic certbot
  args:
    creates: /snap/bin/certbot

- name: Pastikan Certbot dapat diakses dari /usr/bin
  file:
    src: /snap/bin/certbot
    dest: /usr/bin/certbot
    state: link
    force: yes

- name: Perbarui Cloudflare SDK ke versi terbaru
  pip:
    name: cloudflare
    state: latest

- name: Pastikan Certbot Plugin Cloudflare sudah terinstall
  shell: snap install certbot-dns-cloudflare
  args:
    creates: /snap/bin/certbot-dns-cloudflare

- name: Pastikan API Token Cloudflare tersimpan dengan benar
  template:
    src: cloudflare.ini.j2
    dest: /root/cloudflare.ini
    mode: '0600'

- name: Debug - Periksa isi Cloudflare API Token
  shell: cat /root/cloudflare.ini
  register: cloudflare_token_check
  changed_when: false

- name: Tampilkan isi Cloudflare API Token untuk memastikan validitas
  debug:
    var: cloudflare_token_check.stdout_lines

- name: Pastikan direktori untuk sertifikat ada
  file:
    path: "/etc/letsencrypt/live/{{ domain_name }}"
    state: directory
    mode: '0755'
  ignore_errors: yes

- name: Generate Wildcard SSL Certificate menggunakan Cloudflare DNS Challenge
  command: >
    certbot certonly --dns-cloudflare
    --dns-cloudflare-credentials /root/cloudflare.ini
    --email {{ email_ssl }}
    --agree-tos --no-eff-email
    --server https://acme-v02.api.letsencrypt.org/directory
    -d {{ domain_name }} -d *.{{ domain_name }}
  args:
    creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
  register: ssl_output
  ignore_errors: no

- name: Tampilkan hasil eksekusi Certbot jika terjadi error
  debug:
    var: ssl_output.stderr_lines
  when: ssl_output.rc != 0

- name: Set otomatisasi pembaruan sertifikat SSL
  cron:
    name: "Renew SSL Certificate"
    job: "/usr/bin/certbot renew --quiet --dns-cloudflare --dns-cloudflare-credentials /root/cloudflare.ini"
    state: present

- name: Pastikan konfigurasi Nginx valid sebelum restart
  become: yes
  command: nginx -t
  register: nginx_config_check
  changed_when: nginx_config_check.rc != 0
  failed_when: nginx_config_check.rc != 0

- name: Restart Nginx untuk menerapkan SSL
  become: yes
  service:
    name: nginx
    state: restarted
  when: nginx_config_check.rc == 0

---
- name: Pastikan user deploy memiliki akses sudo tanpa password
  become: yes
  lineinfile:
    path: /etc/sudoers.d/deploy
    create: yes
    line: "deploy ALL=(ALL) NOPASSWD: ALL"
    validate: 'visudo -cf %s'

- name: Perbarui daftar paket sebelum instalasi
  become: yes
  apt:
    update_cache: yes

- name: Install Nginx jika belum ada
  become: yes
  apt:
    name: nginx
    state: present

- name: Cek apakah Nginx sudah terinstal
  become: yes
  command: dpkg -l | grep nginx
  register: nginx_check
  ignore_errors: yes

- name: Debug hasil pengecekan instalasi Nginx
  debug:
    var: nginx_check.stdout_lines

- name: Pastikan Nginx service tersedia dan berjalan
  become: yes
  shell: |
    systemctl enable nginx
    systemctl start nginx
  ignore_errors: yes

- name: Cek nama service Nginx
  become: yes
  shell: systemctl list-units --type=service | grep nginx | awk '{print $1}'
  register: nginx_service_name
  changed_when: false

- name: Debug nama service Nginx
  debug:
    var: nginx_service_name.stdout_lines

- name: Salin konfigurasi Nginx untuk Reverse Proxy Frontend
  become: yes
  template:
    src: templates/frontend.conf.j2
    dest: /etc/nginx/sites-available/frontend
  notify: Restart Nginx

- name: Aktifkan konfigurasi Reverse Proxy untuk Frontend
  become: yes
  file:
    src: /etc/nginx/sites-available/frontend
    dest: /etc/nginx/sites-enabled/frontend
    state: link
  notify: Restart Nginx

- name: Pastikan konfigurasi Nginx valid sebelum restart
  become: yes
  command: nginx -t
  register: nginx_config_check
  changed_when: nginx_config_check.rc != 0
  failed_when: nginx_config_check.rc != 0

- name: Restart Nginx dengan nama service yang ditemukan
  become: yes
  service:
    name: "{{ nginx_service_name.stdout | default('nginx') }}"
    state: restarted
  when: nginx_service_name.stdout | length > 0
  ignore_errors: yes

- name: Pastikan Firewall (UFW) Mengizinkan HTTP dan HTTPS
  become: yes
  command: ufw allow 'Nginx Full'
  ignore_errors: yes

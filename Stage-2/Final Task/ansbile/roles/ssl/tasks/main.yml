---

  # Pastikan Snapd Terinstal
  - name: Install Snapd
    apt:
      name: snapd
      state: present
      update_cache: yes

  # Pastikan Python3 dan dependensinya tersedia
  - name: Install Python3 dan dependensinya
    apt:
      name:
        - python3
        - python3-pip
        - python3-venv
      state: present
      update_cache: yes

  # Install Certbot via Snap
  - name: Install Certbot melalui Snap
    command: sudo snap install --classic certbot
    args:
      creates: /snap/bin/certbot

  # Berikan izin ke Certbot untuk menggunakan plugin dengan root
  - name: Set Certbot agar dapat menggunakan plugin dengan root
    command: sudo snap set certbot trust-plugin-with-root=ok

  # Buat Symlink agar Certbot bisa diakses dari `/usr/bin`
  - name: Pastikan Certbot dapat diakses dari `/usr/bin`
    file:
      src: /snap/bin/certbot
      dest: /usr/bin/certbot
      state: link
    ignore_errors: yes

  # Install Plugin Cloudflare untuk Certbot
  - name: Install plugin Cloudflare untuk Certbot
    command: sudo snap install certbot-dns-cloudflare

  # Pastikan Cloudflare Python SDK versi terbaru
  - name: Perbarui Cloudflare Python SDK
    command: python3 -m pip install --upgrade --force-reinstall cloudflare
    environment:
      PIP_BREAK_SYSTEM_PACKAGES: "1"
    ignore_errors: no

  # Pastikan API Token Cloudflare tersimpan dengan benar
  - name: Pastikan API Token Cloudflare tersimpan dengan benar
    template:
      src: cloudflare.ini.j2
      dest: /root/cloudflare.ini
      mode: '0600'

  # Verifikasi API Token Cloudflare sebelum menjalankan Certbot
  - name: Cek validitas API Token Cloudflare
    command: cat /root/cloudflare.ini
    register: cloudflare_api_check

  - name: Gagal jika API Token tidak valid
    fail:
      msg: "API Token Cloudflare tidak valid atau tidak ditemukan di /root/cloudflare.ini. Harap periksa kembali."
    when: cloudflare_api_check.stdout is not search("dns_cloudflare_api_token")

  # Pastikan direktori sertifikat ada sebelum generate SSL
  - name: Pastikan direktori sertifikat ada sebelum generate SSL
    file:
      path: "/etc/letsencrypt/live/{{ domain_name }}"
      state: directory
      mode: '0755'
    ignore_errors: yes

  # Generate Wildcard SSL Certificate menggunakan Cloudflare DNS Challenge
  - name: Generate Wildcard SSL Certificate menggunakan Cloudflare DNS Challenge
    command: >
      certbot certonly --dns-cloudflare
      --dns-cloudflare-credentials /root/cloudflare.ini
      --email {{ email_ssl }}
      --agree-tos --no-eff-email
      --server https://acme-v02.api.letsencrypt.org/directory
      -d {{ domain_name }} -d *.{{ domain_name }}
    args:
      creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
    register: ssl_output
    ignore_errors: no

  # Tampilkan error jika ada kegagalan pada proses Certbot
  - name: Tampilkan hasil eksekusi Certbot jika terjadi error
    debug:
      var: ssl_output.stderr_lines
    when: ssl_output.rc != 0

  # Set otomatisasi pembaruan sertifikat SSL
  - name: Set otomatisasi pembaruan sertifikat SSL
    cron:
      name: "Renew SSL Certificate"
      job: "/usr/bin/certbot renew --quiet --dns-cloudflare --dns-cloudflare-credentials /root/cloudflare.ini"
      state: present
